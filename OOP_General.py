# -*- coding: utf-8 -*-
"""OOP_General

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X2Vf3LdCFe4XH4pZr1fokGIIWIjxElIG
"""

#Create a Vehicle class with max_speed and mileage instance attributes

class Vehicle:
  def __init__ (self, max_speed, mileage):
    self.max_speed = max_speed
    self.mileage = mileage

James = Vehicle(100, 10)

print(James.max_speed)
print(James.mileage)

#Create a Vehicle class without any variables and methods

class Vehicle:
  def __init__ (self):
    pass

James = Vehicle()
print(type(James))

#Create child class Bus that will inherit all of the variables and methods of the Vehicle class
#Vehicle Name: School Volvo Speed: 180 Mileage: 12

class Vehicle:

    def __init__(self, name, max_speed, mileage):
        self.name = name
        self.max_speed = max_speed
        self.mileage = mileage

class Bus(Vehicle):
    pass

a = Bus("School Volvo", 180, 12)
print(a.name, a.max_speed, a.mileage)

#Create a Bus class that inherits from the Vehicle class. Give the capacity argument of Bus.seating_capacity() a default value of 50.
#The seating capacity of a bus is 50 passengers

class Vehicle:
    def __init__(self, name, max_speed, mileage):
        self.name = name
        self.max_speed = max_speed
        self.mileage = mileage

    def seating_capacity(self, capacity):
        return f"The seating capacity of a {self.name} is {capacity} passengers"

class Bus(Vehicle):
    def seating_capacity(self, capacity):
        return super().seating_capacity(capacity=50)

School_bus = Bus("School Volvo", 180, 12)
print(School_bus.seating_capacity(40))

#Define a class attribute "color" with a default value white. I.e., Every Vehicle should be white.
#Color: White, Vehicle name: School Volvo, Speed: 180, Mileage: 12
#Color: White, Vehicle name: Audi Q5, Speed: 240, Mileage: 18

class Vehicle:
  def __init__(self, name, max_speed, mileage):
    self.name = name
    self.max_speed = max_speed
    self.mileage = mileage

class Bus(Vehicle):
  def __init__(self, name, max_speed, mileage):
    super(). __init__(name, max_speed, mileage)
    self.color = "white"

class Car(Vehicle):
  def __init__(self, name, max_speed, mileage):
    super(). __init__(name, max_speed, mileage)
    self.color = "white"

a = Bus("volvo", 10, 10)
b = Car("bmw", 5, 5)
print("Color:", a.color, ", Vehicle name:", a.name, ", Speed:", a.max_speed, ", Mileage:", a.mileage)

#Total Bus fare is: 5500.0

class Vehicle:
    def __init__(self, name, mileage, capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

    def fare(self):
        return self.capacity * 100

class Bus(Vehicle):
  def fare(self):
    return self.capacity * 110

School_bus = Bus("School Volvo", 12, 60)
print("Total Bus fare is:", School_bus.fare())

#Determine which class a given Bus object belongs to (Check type of a object)

class Vehicle:
    def __init__(self, name, mileage, capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

class Bus(Vehicle):
    pass

School_bus = Bus("School Volvo", 12, 50)
print(School_bus.name)

#Determine if School_bus is also an instance of the Vehicle class

class Vehicle:
    def __init__(self, name, mileage, capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

class Bus(Vehicle):
    pass

School_bus = Bus("School Volvo", 12, 50)

# use Python's built-in isinstance() function
print(isinstance(School_bus, Vehicle))